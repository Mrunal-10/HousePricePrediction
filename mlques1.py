# -*- coding: utf-8 -*-
"""MLques1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XWcIIM4VyUfef8N5IXFtdRTv3Na6C6eM
"""



# Importing the database

import pandas as pd
df = pd.read_csv("HousingData.csv")
df.head()

df.shape

#  Data Pre-processing
df.isnull().sum()

df = df.fillna(method='bfill').fillna(method='ffill')

df.isnull().sum()

from sklearn.preprocessing import LabelEncoder
labelenc = LabelEncoder()
df['LOCATION'] = labelenc.fit_transform(df['LOCATION'])

df.head(10)

import seaborn as sns
import matplotlib.pyplot as plt

sns.histplot(df['PRICE (IN L)'], kde=True)
plt.title('Distribution of House Prices')
plt.show()

# Training the model

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error



X = df.iloc[:, :-1]
y = df.iloc[:, -1]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=0)

model = LinearRegression()
model.fit(X_train, y_train)
score = model.score(X_train, y_train)
print(f'Score = {score}')

y_pred = model.predict(X_test)

# Calcultaing the accuracy using Root mean square error

rmse = np.sqrt(mean_squared_error(y_test, y_pred))

print("RMSE: ", rmse)

# Calclating the Mean Absolute Error
from sklearn.metrics import mean_absolute_error
mae = mean_absolute_error(y_test, y_pred)
print("Mean Absolute Error:", mae)